#source common.sh

#print_head "Install nginx"
#yum install nginx -y &>>${LOG}
#status_check
#
#print_head "Enable nginx "
#systemctl enable nginx &>>${LOG}
#status_check

#print_head "Start nginx"
#systemctl start nginx &>>${LOG}
#status_check

#print_head "Remove old content"
#rm -rf /usr/share/nginx/html/* &>>${LOG}

#down load frontend content
#curl -o /tmp/frontend.zip https://roboshop-artifacts.s3.amazonaws.com/frontend.zip &>>${LOG}

#cd /usr/share/nginx/html &>>${LOG}
#unzip /tmp/frontend.zip &>>${LOG}
#cp ${script_location}/files/nginx-roboshop.conf /etc/nginx/default.d/roboshop.conf &>>${LOG}
#status_check

#print_head "Restart Nginx"
#systemctl restart nginx &>>${LOG}
#status_check


- name: Install Nginx
  ansible.builtin.yum:
    name: nginx
    state: installed

- name: Remove old HTTP Documents
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: absent

- name: Create HTTP Document Directory
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: directory

#- name: Download frontend App content
#  ansible.builtin.unarchive:
#    src: https://roboshop-artifacts.s3.amazonaws.com/frontend.zip
#    dest: /usr/share/nginx/html
#    remote_src: yes

- name: Download {{component}} App content
  ansible.builtin.unarchive:
    src: https://{{nexus_user}}:{{nexus_pass}}@172.31.0.224:8081/repository/{{component}}/{{component}}-{{app_version}}.zip
    dest: /usr/share/nginx/html/
    remote_src: yes
  vars:
    nexus_user: "{{ lookup('aws_ssm', 'nexus.user', region='us-east-1' ) }}"
    nexus_pass: "{{ lookup('aws_ssm', 'nexus.pass', region='us-east-1' ) }}"

#
- name: Copy RoboShop Config file to Nginx
  ansible.builtin.template:
    src: roboshop.conf
    dest: /etc/nginx/default.d/roboshop.conf

- name: Start Nginx Service
  ansible.builtin.systemd:
    state: restarted
    name: nginx
    enabled: yes



